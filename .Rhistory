heightCM =188.2
class(heightCM)
heightCM
numberSons =L
numberSons =1L
class(numberSons)
numberSons
teachingCoursera = TRUE
class(teancingCoursera)
class(teahcingCoursera)
class(teachingCoursera)
heights = c(188.2 , 183.3 , 193,4)
heights
firstNames = c("Jeff", "Roger", "Andrew", "Brian")
firstNames
vector1 = c(188.2 , 183.3 , 193,4)
vector2 = c("Jeff", "Roger", "Andrew", "Brian")
myList = (heights= vector1 , firstNames = vector2)
myList = list(heights= vector1 , firstNames = vector2)
myList
myMatrix = matrix(c(1,2,3,4), byrow =T, nrow =2)
myMatrix
vector1 = c(188.2 , 183.3 , 193,4 , 192,3)
myDataFrame - data.frame( heughts = vector1, firstNames =vector2)
myDataFrame - data.frame( heights = vector1, firstNames =vector2)
myDataFrame = data.frame( heights = vector1, firstNames =vector2)
vector 1
vector1
vector1 = c(188.2 , 183.3 , 193.4 , 192,3)
vector1
myDataFrame = data.frame( heights = vector1, firstNames =vector2)
vector1 = c(188.2 , 183.3 , 193.4 , 192.3)
myDataFrame = data.frame( heights = vector1, firstNames =vector2)
myDataFrame
smoker = c("yes" , "no" , "yes","yes")
smokeFactor = as.Factor(smoker)
smokeFactor = as.factor(smoker)
smokeFactor
vector1 = c(188.2 , 183.3 , 193.4 , NA)
is.na(vector1)
vector1[1]
vector1[c(1,2,4)]
myDataFrame[1,1:2]
myDataFrames$firstNames
myDataFrame$firstNames
myDataFrame[firstNames == "Jeff"]
myDataFrame[firstNames == "Jeff",]
myDataFrame[heights < 199,]
myDataFrame[heights < 190,]
args(rnorm)
heights= rnorm(10,mean=188, sd=3)
heights
args(rbinom)
coinFlips = rbinom(10,size=10,prob=0.5)
coinFlips
x= seq(from= 5, to=5 ,length=10)
normalDensity= dnorm (x,mean=0,sd=1)
normalDensity
round(normalDensity,2)
x= seq(from= -5, to=5 ,length=10)
normalDensity= dnorm (x,mean=0,sd=1)
round(normalDensity,2)
x =seq(0,10,by=1)
bD = dbinom(x,size=10,prob=0.5)
rd
bD
round(bD,10)
round(bD,2)
heights= rnomr(10,mean=188,sd=3)
heights= rnorm(10,mean=188,sd=3)
heights
sample(height,size=10,replace = TRUE)
sample(heights,size=10,replace = TRUE)
sample(heights,size=10,replace = FALSE)
set.seed(12345)
rnoem(5,mean=0,sd=1)
rnorm(5,mean=0,sd=1)
set.seed(5)
sample(1:8, size=4,replace = FALSE)
install.packages("kernelab")
install.packages("kernlab")
install.packages("kernlab" , lib ="/var/folders/pp/sdp1rkrs3ddcd33m5bj6bbvr0000gn/T//RtmpHAGnMN/downloaded_packages")
library(kernlab)
install.packages("kernlab")
library(kernlab)
detach("package:kernlab", unload=TRUE)
install.packages("knitr")
library(knitr)
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
clc
clear
pwd
ls
a<=available.packages()
exit
cd
help plot
?plot
add2<-function(x,y,z){
x+y+z^2
}
add2(3,2,2)
above<- function(x,y){
use<- x>y
x[use]
}
x<-1:20
above(x,10)
above(x)
above<- function(x,y=10){
use<- x>y
x[use]
}
above<- function(x,y=10){
use<- x>y
x[use]
}
above(x)
?above
search()
x<-matrix(1:4,2,2)
x
colMeans(iris)
apply(iris[,1:4],2,mean)
irissub(iris,iris$Species=='virginica')
irissub<-subset(iris,iris$Species=='virginica')
mean(irissub$Sepal.Length)
with(mtcars,tapply(mpg,cyl,mean))
?mtcars
with(mtcars,tapply(hp,cyl,mean))
hpcyl<-with(mtcars,tapply(hp,cyl,mean))
abs(hpcyl[3]-hpcyl[1])
source('~/.active-rstudio-document')
Kapa<-1:15
Kapa
kv<-makeVector(Kapa)
kv
kv$setmean
kv$setmean()
kv-cachemean(Kapa)
kv<-cachemean(Kapa)
myMAt<-matrix(rnorm(9),3)
myMAt
source('~/.active-rstudio-document')
smo<-makeCacheMatrix(myMat)
smo$get()
smo<-makeCacheMatrix(myMAt)
smo$get()
smo$getinv()
smo$setinv()
cacheSolve(smo)
cacheSolve(smo)
smo$setinv()
smo$getinv()
cacheSolve(smo)
set.seed(1)
myMat<-matrix(rnorm(9),3)
myMat
?solve
dim(myMat)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
smo<-makeCacheMatrix(myMat)
smo$get
cacheSolve(smo)
dim(myMat)
cacheSolve(myMat)
source('~/.active-rstudio-document')
set.seed(1234)
myMat<-matrix(rnorm(9),3)
myMat
smo<-makeCacheMatrix(myMat)
smo$getinverse
f<-smo$getinverse
f
smo<-makeCacheMatrix(myMat)
cacheSolve(smo)
source('~/.active-rstudio-document')
set.seed(1234)
myMat<-matrix(rnorm(9),3)
myMat
smo<-makeCacheMatrix(myMat)
smo$get
smo$get()
cacheSolve(smo)
cacheSolve(smo)
smo$get()
smo$getinverse()
myMat<-matrix(rnorm(9),2,3)
myMat<-matrix(rnorm(9),3,3)
myMat<-matrix(rnorm(15),5,3)
myMat
smo$getinverse()
makeCacheMatrix(myMat)
smo1<-makeCacheMatrix(myMat)
smo1$get()
smo1$getinverse()
cacheSolve(smo1)
x <- read.fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
y <- read.fwf(
file=url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"),
skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
y <- read.fwf(
file=url("http://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"),
skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
y <- read.fwf(
file=url("http://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"),
skip=4,method=curl,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
y <- read.fwf(
file=url("http://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"),
skip=4,method='curl',
widths=c(12, 7,4, 9,4, 9,4, 9,4))
?read.fwf
View(y)
sum(y$V9)
sum(y$V4)
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(lattice)
library(ggplot2)
library(plyr)
library(dplyr)
install.packages("plyr")
install.packages("dplyr")
library(kernlab)
data(spam)
r(version)
version(r)
?version
R.Version()
install.packages("RIGHT")
plot(price ~ carat, diamonds, type="p")
library(diamonds)
install.package("diamonds")
install.packages("diamonds")
library(diamonds)
install.packages(c("boot", "bootstrap", "class", "cluster", "DAAG", "foreign", "httr", "KernSmooth", "markdown", "MASS", "Matrix", "mclust", "memoise", "mgcv", "mime", "nlme", "nnet", "RCurl", "rpart", "spatial", "survival", "swirl", "xlsx", "yaml"))
install.packages("ggplot2")
library(ggplt2)
library(ggplot2)
plot(price ~ carat, diamonds, type="p")
RIGHT(plot(price ~ carat, diamonds, type="p"))
library(RIGHT)
RIGHT(plot(price ~ carat, diamonds, type="p"))
R.Verson
R.Version()
install.packages(c("class", "mgcv"))
library(ggplot2)
library(RIGHT)
install.packages("ggplot2")
library(ggplot2)
plot(price ~ carat, diamonds, type="p")
install.packages("RIGHT")
library(RIGHT)
RIGHT(plot(price ~ carat, diamonds, type="p"))
library(ggplot2)
library(RIGHT)
plot(price ~ carat, diamonds, type="p")
RIGHT(plot(price ~ carat, diamonds, type="p"))
options(browser="/Applications/Firefox.app")
help.start()
options(browser="/usr/bin/chromium")
help.start()
library(knitr)
library(ggplot2)
setwd('~/Desktop/RepData_PeerAssessment1/')
actdata<-read.csv("activity.csv",header=TRUE,sep=",")
actdata$date_new <- as.POSIXct( strptime(as.character(actdata$date), "%Y-%m-%d"))
# Add column giving the week of the day
actdata$date_of_week<-as.factor(weekdays(as.Date(actdata$date_new)))
# Create a factor variable with Weekday and Weekend
actdata$date_type[actdata$date_of_week %in% c('Saturday','Sunday')]<-"Weekend"
actdata$date_type[!(actdata$date_of_week %in% c('Saturday','Sunday'))]<-"Weekday"
actdata$date_type<-as.factor(actdata$date_type)
# Create a subset removing the NA entries from the steps
actdata_non_na<-actdata[!is.na(actdata$steps),]
summary(actdata_non_na)
ggplot(actdata_non_na,aes(date_new,steps))+
geom_bar(stat='identity')
mean(actdata_non_na$steps)
median(actdata_non_na$steps)
table(date_new,steps)
table(act_data_non_na$date_new,act_data_non_na$steps)
table(actdata_non_na$date_new,actdata_non_na$steps)
daily_steps<- ddply(actdata_non_na, .(date_new), summarise, steps=sum(steps))
library(plyr)
daily_steps<- ddply(actdata_non_na, .(date_new), summarise, steps=sum(steps))
View(daily_steps)
ggplot(daily_steps,aes(date_new,steps))+
geom_bar(stat='identity')
mean(daily_steps$steps)
ggplot(daily_steps,aes(date_new,steps))+
geom_bar(stat='identity')+
scale_x_date(labels = date_format("%d-%m"), breaks = date_breaks("day"))
library(scales)
ggplot(daily_steps,aes(date_new,steps))+
geom_bar(stat='identity')+
scale_x_date(labels = date_format("%d-%m"), breaks = date_breaks("day"))
ggplot(daily_steps,aes(date_new,steps))+
geom_bar(stat='identity')+
scale_x_date(labels = date_format("%d-%m"), breaks = date_breaks("days"))
ggplot(daily_steps,aes(date_new,steps))+
geom_bar(stat='identity')+
scale_x_date(date_new,labels = date_format("%d-%m"), breaks = date_breaks("days"))
scale_x_date()
ggplot(daily_steps,aes(date_new,steps))+
geom_bar(stat='identity')+
scale_x_date()
ggplot(daily_steps,aes(date_new,steps))+
scale_x_date()+
geom_bar(stat='identity')
ggplot(daily_steps,aes(as.Date(date_new),steps))+
scale_x_date()+
geom_bar(stat='identity')
ggplot(daily_steps,aes(as.Date(date_new),steps))+
scale_x_date(breaks = date_breaks("day"))+
geom_bar(stat='identity')
ggplot(daily_steps,aes(as.Date(date_new),steps))+
scale_x_date(breaks = date_breaks("day"))+
geom_bar(stat='identity')+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(daily_steps,aes(as.Date(date_new),steps))+
scale_x_date(name="Date" breaks = date_breaks("day"))+
geom_bar(stat='identity')+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ggtitle("Daily Total Number of Steps")+
scale_y_continuous(name="Total Number of Steps")
ggplot(daily_steps,aes(as.Date(date_new),steps))+
scale_x_date(name="Date" breaks = date_breaks("day"))+
geom_bar(stat='identity')+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ggtitle("Daily Total Number of Steps")+
scale_y_discrete(name="Total Number of Steps")
ggplot(daily_steps,aes(as.Date(date_new),steps))+
scale_x_date(name="Date" ,breaks = date_breaks("day"))+
geom_bar(stat='identity')+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ggtitle("Daily Total Number of Steps")
ggplot(daily_steps,aes(as.Date(date_new),steps))+
scale_x_date(name="Date" ,breaks = date_breaks("day"))+
geom_bar(stat='identity')+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ggtitle("Daily Total Number of Steps")+
scale_y_discrete(name="Total Number of Steps")
ggplot(daily_steps,aes(as.Date(date_new),steps))+
scale_x_date(name="Date" ,breaks = date_breaks("day"))+
geom_bar(stat='identity')+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ggtitle("Daily Total Number of Steps")+
ylab(name="Total Number of Steps")
ggplot(daily_steps,aes(as.Date(date_new),steps))+
scale_x_date(name="Date" ,breaks = date_breaks("day"))+
geom_bar(stat='identity')+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ggtitle("Daily Total Number of Steps")+
ylab(name="Total Number of Steps")
)
